{"version":3,"sources":["components/NewExpense/Expenseform.js","components/NewExpense/NewExpense.js","components/Expensefilter/ExpenseFilter.js","components/Expensoutput/ExpenseDate.js","components/Expensoutput/ExpenseItems.js","components/chart/ChartBar.js","components/chart/Chart.js","components/Expensoutput/Expenseschart.js","components/Expensoutput/Expense.js","App.js","index.js"],"names":["Expenseform","props","useState","enterdtitle","setEnterdtitle","enterdamount","setEnterdamount","enterddate","setEnterddate","className","onSubmit","event","preventDefault","ExpenseData","title","amount","date","Date","onSaveExpenseData","type","value","onChange","target","min","step","onClick","oncancle","NewExpense","NoFormSubmit","FormSubmit","eneterdExpenseData","id","Math","random","toString","onsaveexpensedata","ExpenseFilter","selected","onEnteringtheyear","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenceItems","Title","setTitle","prompt","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","Expenseschart","chartDataPoints","expenses","expense","getMonth","Expense","filteredYear","setFilterdYear","filteredexpenses","items","filter","selectedYear","length","dammy_Expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c98d423a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nfunction Expenseform(props) {\r\n  const [enterdtitle, setEnterdtitle] = useState(\"\");\r\n  const [enterdamount, setEnterdamount] = useState(\"\");\r\n  const [enterddate, setEnterddate] = useState(\"\");\r\n  function TitleChangeHandler(event) {\r\n    setEnterdtitle(event.target.value);\r\n  }\r\n  function amountChangeHandler(event) {\r\n    setEnterdamount(event.target.value);\r\n  }\r\n  function DateChangeHandler(event) {\r\n    setEnterddate(event.target.value);\r\n  }\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const ExpenseData = {\r\n      title: enterdtitle,\r\n      amount: enterdamount,\r\n      date: new Date(enterddate),\r\n    };\r\n    props.onSaveExpenseData(ExpenseData);\r\n    setEnterdtitle(\"\");\r\n    setEnterdamount(\"\");\r\n    setEnterddate(\"\");\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control label\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enterdtitle}\r\n              onChange={TitleChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control label\">\r\n            <label>Price</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enterdamount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control label \">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={enterddate}\r\n              onChange={DateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.oncancle}>cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Expenseform;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport Expenseform from \"./Expenseform\";\r\nfunction NewExpense(props) {\r\n  \r\n  const[NoFormSubmit, FormSubmit]=useState(false);\r\n  function saveExpenseDataHandler(eneterdExpenseData) {\r\n    const ExpenseData = {\r\n      ...eneterdExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onsaveexpensedata(ExpenseData);\r\n  }\r\n  function ShowForm(){\r\nFormSubmit(true);\r\n  };\r\n  function stopShowForm(){\r\n    FormSubmit(false)\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!NoFormSubmit&& <button onClick={ShowForm}>Add New Expense</button>}\r\n      {NoFormSubmit&&<Expenseform onSaveExpenseData={saveExpenseDataHandler} oncancle={stopShowForm}/>}\r\n    </div>\r\n  );\r\n}\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\nfunction ExpenseFilter(props) {\r\n  const [oldFitler, Enterdfilter] = useState(\"\");\r\n  function ExpenseFiter2020(event) {\r\n    props.onEnteringtheyear(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={ExpenseFiter2020}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseFilter;\r\n","function ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expense.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nfunction ExpenceItems(props) {\r\n  const [Title, setTitle] = useState(props.title);\r\n  function ChangeTitle() {\r\n    setTitle(prompt(\"Please enter the new title\"));\r\n  }\r\n  return (\r\n    <div className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{Title}</h2>\r\n      </div>\r\n      <div className=\"expense-item__price\">&#x20B9;{props.amount}</div>\r\n      <button\r\n        className=\"expense-item__price expense-item__btn\"\r\n        onClick={ChangeTitle}\r\n      >\r\n        Change Title\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenceItems;\r\n","import \"./chartbar.css\";\r\nfunction ChartBar(props) {\r\n    \r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ChartBar;\r\n","import \"./chart.css\"\r\nimport ChartBar from \"./ChartBar\";\r\nfunction Chart(props) {\r\n    const dataPointValues= props.dataPoints.map(dataPoint=> dataPoint.value)\r\n    const totalMaximum= Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Chart;\r\n","import Chart from \"../chart/Chart\"\r\nfunction Expenseschart (props){\r\n    const chartDataPoints=[\r\n        {label:\"Jan\", value:0},\r\n        {label:\"fed\", value:0},\r\n        {label:\"March\", value:0},\r\n        {label:\"April\", value:0},\r\n        {label:\"May\", value:0},\r\n        {label:\"June\", value:0},\r\n        {label:\"July\", value:0},\r\n        {label:\"Aug\", value:0},\r\n        {label:\"Sep\", value:0},\r\n        {label:\"Oct\", value:0},\r\n        {label:\"Nov\", value:0},\r\n        {label:\"Dec\", value:0},\r\n];\r\nfor( const expense of props.expenses){\r\n    const expenseMonth=expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value+= expense.amount;\r\n}\r\nreturn <Chart dataPoints={chartDataPoints}/>\r\n\r\n}\r\nexport default Expenseschart","import React, { useState } from \"react\";\r\nimport ExpenseFilter from \"../Expensefilter/ExpenseFilter\";\r\nimport ExpenceItems from \"./ExpenseItems\";\r\nimport Expenseschart from \"./Expenseschart\";\r\nfunction Expense(props) {\r\n  const [filteredYear, setFilterdYear] = useState(\"2020\");\r\n  function FilterChangeHandler(selectedYear) {\r\n    setFilterdYear(selectedYear);\r\n  }\r\n  const filteredexpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onEnteringtheyear={FilterChangeHandler}\r\n      />\r\n            <Expenseschart expenses={filteredexpenses}/>\r\n\r\n      {filteredexpenses.length === 0 ? (\r\n        <p className=\"NoExpensesFound\">No Expense found.</p>\r\n      ) : (\r\n        filteredexpenses.map((expense) => (\r\n          <ExpenceItems\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Expense;\r\n","\nimport \"./components/Expensoutput/Expense.css\";\nimport React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expense from \"./components/Expensoutput/Expense\";\nimport ExpenseDate from \"./components/Expensoutput/ExpenseDate\";\nconst dammy_Expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(dammy_Expenses);\n  function addnewexpensedata(expense) {\n    setExpenses(function (prevExpenses) {\n      return [expense, ...prevExpenses];\n    });\n  }\n  return (\n    <div>\n      <NewExpense onsaveexpensedata={addnewexpensedata} />\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}